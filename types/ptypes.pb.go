// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: types/ptypes.proto

package types

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_ptypes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_types_ptypes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_types_ptypes_proto_rawDescGZIP(), []int{0}
}

type WinningNums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers  []int32              `protobuf:"varint,1,rep,packed,name=Numbers,proto3" json:"Numbers,omitempty"`
	DrawDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=DrawDate,proto3" json:"DrawDate,omitempty"`
}

func (x *WinningNums) Reset() {
	*x = WinningNums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_ptypes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinningNums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinningNums) ProtoMessage() {}

func (x *WinningNums) ProtoReflect() protoreflect.Message {
	mi := &file_types_ptypes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinningNums.ProtoReflect.Descriptor instead.
func (*WinningNums) Descriptor() ([]byte, []int) {
	return file_types_ptypes_proto_rawDescGZIP(), []int{1}
}

func (x *WinningNums) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *WinningNums) GetDrawDate() *timestamp.Timestamp {
	if x != nil {
		return x.DrawDate
	}
	return nil
}

type TicketTransport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Numbers  []int32              `protobuf:"varint,2,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
	DrawDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=drawDate,proto3" json:"drawDate,omitempty"`
	Hash     string               `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TicketTransport) Reset() {
	*x = TicketTransport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_ptypes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketTransport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTransport) ProtoMessage() {}

func (x *TicketTransport) ProtoReflect() protoreflect.Message {
	mi := &file_types_ptypes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTransport.ProtoReflect.Descriptor instead.
func (*TicketTransport) Descriptor() ([]byte, []int) {
	return file_types_ptypes_proto_rawDescGZIP(), []int{2}
}

func (x *TicketTransport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketTransport) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *TicketTransport) GetDrawDate() *timestamp.Timestamp {
	if x != nil {
		return x.DrawDate
	}
	return nil
}

func (x *TicketTransport) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type NextDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *NextDate) Reset() {
	*x = NextDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_ptypes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextDate) ProtoMessage() {}

func (x *NextDate) ProtoReflect() protoreflect.Message {
	mi := &file_types_ptypes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextDate.ProtoReflect.Descriptor instead.
func (*NextDate) Descriptor() ([]byte, []int) {
	return file_types_ptypes_proto_rawDescGZIP(), []int{3}
}

func (x *NextDate) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type TicketHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TicketHashRequest) Reset() {
	*x = TicketHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_ptypes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketHashRequest) ProtoMessage() {}

func (x *TicketHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_types_ptypes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketHashRequest.ProtoReflect.Descriptor instead.
func (*TicketHashRequest) Descriptor() ([]byte, []int) {
	return file_types_ptypes_proto_rawDescGZIP(), []int{4}
}

func (x *TicketHashRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type UserNumbersTransport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers []int32 `protobuf:"varint,1,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
}

func (x *UserNumbersTransport) Reset() {
	*x = UserNumbersTransport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_ptypes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNumbersTransport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNumbersTransport) ProtoMessage() {}

func (x *UserNumbersTransport) ProtoReflect() protoreflect.Message {
	mi := &file_types_ptypes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNumbersTransport.ProtoReflect.Descriptor instead.
func (*UserNumbersTransport) Descriptor() ([]byte, []int) {
	return file_types_ptypes_proto_rawDescGZIP(), []int{5}
}

func (x *UserNumbersTransport) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

type ResultResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash           string               `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Numbers        []int32              `protobuf:"varint,2,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
	WinningNumbers []int32              `protobuf:"varint,3,rep,packed,name=winningNumbers,proto3" json:"winningNumbers,omitempty"`
	Win            bool                 `protobuf:"varint,4,opt,name=win,proto3" json:"win,omitempty"`
	DrawDate       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=drawDate,proto3" json:"drawDate,omitempty"`
}

func (x *ResultResp) Reset() {
	*x = ResultResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_ptypes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultResp) ProtoMessage() {}

func (x *ResultResp) ProtoReflect() protoreflect.Message {
	mi := &file_types_ptypes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultResp.ProtoReflect.Descriptor instead.
func (*ResultResp) Descriptor() ([]byte, []int) {
	return file_types_ptypes_proto_rawDescGZIP(), []int{6}
}

func (x *ResultResp) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ResultResp) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *ResultResp) GetWinningNumbers() []int32 {
	if x != nil {
		return x.WinningNumbers
	}
	return nil
}

func (x *ResultResp) GetWin() bool {
	if x != nil {
		return x.Win
	}
	return false
}

func (x *ResultResp) GetDrawDate() *timestamp.Timestamp {
	if x != nil {
		return x.DrawDate
	}
	return nil
}

var File_types_ptypes_proto protoreflect.FileDescriptor

var file_types_ptypes_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x5f,
	0x0a, 0x0b, 0x57, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x44, 0x72, 0x61, 0x77, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x44, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x65, 0x22,
	0x87, 0x01, 0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a,
	0x08, 0x64, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x72, 0x61,
	0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x0a, 0x08, 0x4e, 0x65, 0x78,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x30,
	0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x22, 0xac, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x72, 0x61, 0x77, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x65, 0x32,
	0x3b, 0x0a, 0x09, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x16,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c,
	0x2e, 0x57, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x73, 0x32, 0x9f, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x4e, 0x65, 0x78, 0x74, 0x44, 0x72, 0x61, 0x77, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x09, 0x2e, 0x4e, 0x65, 0x78,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x10, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x37,
	0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x0b, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0x3a, 0x0a, 0x08, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x63, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x12, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x6f, 0x6d, 0x65, 0x6b, 0x7a, 0x61, 0x6b, 0x72, 0x7a, 0x65, 0x77, 0x73, 0x6b,
	0x69, 0x2f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_ptypes_proto_rawDescOnce sync.Once
	file_types_ptypes_proto_rawDescData = file_types_ptypes_proto_rawDesc
)

func file_types_ptypes_proto_rawDescGZIP() []byte {
	file_types_ptypes_proto_rawDescOnce.Do(func() {
		file_types_ptypes_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_ptypes_proto_rawDescData)
	})
	return file_types_ptypes_proto_rawDescData
}

var file_types_ptypes_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_types_ptypes_proto_goTypes = []interface{}{
	(*Empty)(nil),                // 0: Empty
	(*WinningNums)(nil),          // 1: WinningNums
	(*TicketTransport)(nil),      // 2: TicketTransport
	(*NextDate)(nil),             // 3: NextDate
	(*TicketHashRequest)(nil),    // 4: TicketHashRequest
	(*UserNumbersTransport)(nil), // 5: UserNumbersTransport
	(*ResultResp)(nil),           // 6: ResultResp
	(*timestamp.Timestamp)(nil),  // 7: google.protobuf.Timestamp
}
var file_types_ptypes_proto_depIdxs = []int32{
	7,  // 0: WinningNums.DrawDate:type_name -> google.protobuf.Timestamp
	7,  // 1: TicketTransport.drawDate:type_name -> google.protobuf.Timestamp
	7,  // 2: NextDate.date:type_name -> google.protobuf.Timestamp
	7,  // 3: ResultResp.drawDate:type_name -> google.protobuf.Timestamp
	0,  // 4: Generator.GenerateWinningNumbers:input_type -> Empty
	4,  // 5: Receiver.GetTicketByHash:input_type -> TicketHashRequest
	0,  // 6: Receiver.NextDrawDate:input_type -> Empty
	5,  // 7: Receiver.CreateTicket:input_type -> UserNumbersTransport
	2,  // 8: Checker.CheckTicket:input_type -> TicketTransport
	4,  // 9: Annoucer.CheckResult:input_type -> TicketHashRequest
	1,  // 10: Generator.GenerateWinningNumbers:output_type -> WinningNums
	2,  // 11: Receiver.GetTicketByHash:output_type -> TicketTransport
	3,  // 12: Receiver.NextDrawDate:output_type -> NextDate
	2,  // 13: Receiver.CreateTicket:output_type -> TicketTransport
	6,  // 14: Checker.CheckTicket:output_type -> ResultResp
	6,  // 15: Annoucer.CheckResult:output_type -> ResultResp
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_types_ptypes_proto_init() }
func file_types_ptypes_proto_init() {
	if File_types_ptypes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_ptypes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_ptypes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WinningNums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_ptypes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketTransport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_ptypes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_ptypes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_ptypes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNumbersTransport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_ptypes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_ptypes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_types_ptypes_proto_goTypes,
		DependencyIndexes: file_types_ptypes_proto_depIdxs,
		MessageInfos:      file_types_ptypes_proto_msgTypes,
	}.Build()
	File_types_ptypes_proto = out.File
	file_types_ptypes_proto_rawDesc = nil
	file_types_ptypes_proto_goTypes = nil
	file_types_ptypes_proto_depIdxs = nil
}
